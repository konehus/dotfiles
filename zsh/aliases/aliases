#!/usr/bin/env bash

# +--------+
# | System |
# +--------+
alias shutdown='sudo shutdown now'
alias restart='sudo reboot'
alias suspend='sudo pm-suspend'

alias bigf= 'find / -xdev -type f -size +500M'  # display "big" files > 500M

# +-----+
# | X11 |
# +-----+
alias xpropc='xprop | grep WM_CLASS' # display xprop class

# +-----+
# | Zsh |
# +-----+
alias d='dirs -v'
for index ({1..9}) alias "$index"="cd +${index} > /dev/null"; unset index # directory stack

# +------+
# | eza  |
# +------+
alias l="eza --long --icons --git --all"
alias ld='eza --long --only-dirs --icons=auto -all' 
alias lf='eza --long --only-files --icons --all'
alias ll='eza --long --header --all --icons=auto --sort=name --group-directories-first'
alias lt="eza --tree --level=2 --long --icons --git"
alias ltree="eza --tree --level=2  --icons --git"

# +------+
# | wget |
# +------+
alias wget=wget --hsts-file="$XDG_DATA_HOME/wget-hsts"

# +----+
# | cp |
# +----+
alias cp='cp -iv'
alias mv='mv -iv'
alias rm='rm -iv'

# +------+
# | grep |
# +------+
alias grep="grep -P -i --color=auto"

# +------+
# | xlip |
# +------+
alias cb='xclip -sel clip'

# +------+
# | dust |
# +------+
alias du='dust -d 1 | sort -hr'
alias dusti='dust -d 2 --reverse'

# +------+
# | ping |
# +------+
alias pg='ping 8.8.8.8'

# +------+
# | time |
# +------+
alias time='/usr/bin/time'

# +----+
# | bc |
# +----+
alias calc="noglob calcul"

# +-----+
# | bat |
# +-----+
alias batl='bat --paging=never -l log'

# +-------+
# | fonts |
# +-------+
alias fonts='fc-cache -f -v'

# +--------+
# | netctl |
# +--------+
alias wifi='sudo wifi-menu -o'

# +--------+
# | Golang |
# +--------+
alias gob="go build"
alias gor="go run"
alias goc="go clean -i"
alias gta="go test ./..."       # go test all
alias gia="go install ./..."    # go install all

# +--------+
# | muffet |
# +--------+
alias deadlink="muffet -t 20"

# +---------+
# | netstat |
# +---------+
alias port="netstat -tulpn | grep"

# +--------+
# | Neovim |
# +--------+
alias vi='nvim'
alias v="nvim"
alias svim='sudoedit'
alias nvimc='rm -I $VIMCONFIG/swap/*'             # clean nvim swap file
alias nvimcu='rm -I $VIMCONFIG/undo/*'            # clean the vim undo
alias nviml='nvim -w $VIMCONFIG/vimlog "$@"'      # log the keystrokes
alias nvimd='nvim --noplugin -u NONE'             # launch nvim without any plugin or config (nvim debug)
alias nvimfr='nvim +e /tmp/scratchpad.md -c "set spelllang=fr"'

# +-----+
# | Git |
# +-----+
alias gs='git status'
alias gss='git status -s'
alias ga='git add'
alias gp='git push'
alias gpraise='git blame'
alias gpo='git push origin'
alias gpof='git push origin --force-with-lease'
alias gpofn='git push origin --force-with-lease --no-verify'
alias gpt='git push --tag'
alias gtd='git tag --delete'
alias gtdr='git tag --delete origin'
alias grb='git branch -r'                                                                           # display remote branch
alias gplo='git pull origin'
alias gb='git branch '
alias gc='git commit'
alias gd='git diff'
alias gco='git checkout '
alias gl='git log --oneline'
alias gr='git remote'
alias grs='git remote show'
alias glol='git log --graph --abbrev-commit --oneline --decorate'
alias gclean="git branch --merged | grep  -v '\\*\\|master\\|develop' | xargs -n 1 git branch -d" # Delete local branch merged with master
alias gblog="git for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:red)%(refname:short)%(color:reset) - %(color:yellow)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:blue)%(committerdate:relative)%(color:reset))'"                                                             # git log for each branches
alias gsub="git submodule update --remote"                                                        # pull submodules
alias gj="git-jump"                                                                               # Open in vim quickfix list files of interest (git diff, merged...)
alias dif="git diff --no-index"                                                                   # Diff two files even if not in git repo! Can add -w (don't diff whitespaces)

# +--------+
# | docker |
# +--------+
alias dockls="docker container ls | awk 'NR > 1 {print \$NF}'"                  # display names of running containers
alias dockRr='docker rm $(docker ps -a -q)'                                     # delete every containers / images
alias dockRr='docker rm $(docker ps -a -q) && docker rmi $(docker images -q)'   # delete every containers / images
alias dockstats='docker stats $(docker ps -q)'                                  # stats on images
alias dockimg='docker images'                                                   # list images installed
alias dockprune='docker system prune -a'                                        # prune everything
alias dockceu='docker-compose run --rm -u $(id -u):$(id -g)'                    # run as the host user
alias dockce='docker-compose run --rm'

# +----------------+
# | docker-compose |
# +----------------+
alias docker-compose-dev='docker-compose -f docker-compose-dev.yml' # run a different config file than the default one

# +----------+
# | Personal |
# +----------+
alias nvidia-settings='nvidia-settings --config="$XDG_CONFIG_HOME"/nvidia/settings'

# Folders
alias work="$HOME/workspace"
alias dot="$HOME/.dotfiles"
alias doc="$HOME/Documents"
alias dow="$HOME/Downloads"

alias conf="$XDG_CONFIG_HOME"
alias state="$XDG_STATE_HOME"
alias data="$XDG_DATA_HOME"
alias cache="$XDG_CACHE_HOME"

# Golang
alias gosrc="$GOPATH/src/" # golang src
alias gobin="$GOPATH/bin/" # golang bin

# +--------+
# | Custom |
# +--------+

alias mke='mkextract'
alias ex='extract'

# +---------+
# | scripts |
# +---------+
alias ddg="duckduckgo"
alias wiki="wikipedia"

#so(http requiest)
alias http='xh'
alias download='xh --follow --download -o'

#Zellij
alias zj=zellij

#zoxide
alias zz='zoxide query --interactive'  # Use fzf to interactively select a directory
function zf() {
    zoxide query "$@" && cd "$(zoxide query "$@")"
}

# Jump to a directory and list contents
function zl() {
    zoxide query "$@" && cd "$(zoxide query "$@")" && ls
}

# Open directory in file manager (adjust "xdg-open" for Mac)
function zo() {
    zoxide query "$@" && xdg-open "$(zoxide query "$@")" &
}

# Create directory and change into it
mkcd() {
  if [ -z "$1" ];
    then echo "Usage: mkcd <directory>"
    return 1
  fi
  mkdir -p "$1" && cd "$1"
}

# Create empty file with path
mkf() {
  if [ -z "$1" ]; then
    echo "Usage: mkf <file_path>"
    return 1
  fi
  mkdir -p "$(dirname "$1")" && touch "$1"
}

# Create new Directory, change into it, and then create files
mknew() {
  if [ -z "$1" ]; then
    echo "Usage: mknew <directory> [file1 file2 ...]"
    return 1
  fi
  mkcd "$1" || return 1
  shift
  for file in "$@"; do
    touch "$file"
  done
}
